{
  "name": "@levicape/fourtwo-panel-io",
  "description": "Server for panel-ui. Loads information on current environment resources.",
  "version": "0.0.0-local.0",
  "author": "Pedro Cardona",
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "outpath": "./module",
    "srcpaths": "./src",
    "lintpaths": "./src",
    "i18n": "./src/_i18n",
    "protocols": "./src/_protocols",
    "models": "./src/_models",
    "moduleserver": "./module/cli/HonoHttpServer.mjs",
    "handlerhttplambda": "./module/lambda/HttpHandler.handler"
  },
  "dependencies": {
    "@bufbuild/protobuf": "catalog:protobuf",
    "@levicape/spork": "catalog:",
    "aws4fetch": "catalog:aws",
    "hono": "catalog:hono"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@levicape/fourtwo": "workspace:",
    "@types/node": "catalog:types",
    "expect": "catalog:test",
    "publint": "catalog:package",
    "ts-proto": "catalog:protobuf",
    "typescript": "catalog:dev"
  },
  "engines": {
    "node": "22"
  },
  "exports": {
    "./app": "./module/app/index.mjs"
  },
  "files": [
    "module"
  ],
  "license": "AGPL-3.0-only",
  "nx": {
    "targets": {
      "build:tsc": {
        "dependsOn": []
      },
      "dx:test": {
        "dependsOn": [
          "dx:lint",
          "nx:test"
        ]
      },
      "dx:precommit": {
        "dependsOn": [
          "dx:prepublish",
          "nx:test"
        ]
      },
      "nx:clean": {
        "dependsOn": [
          "clean:module"
        ]
      },
      "nx:compile": {
        "dependsOn": [
          "build:tsc"
        ]
      },
      "nx:test": {
        "dependsOn": [
          "test:module"
        ]
      }
    }
  },
  "private": true,
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/fourtwo",
  "scripts": {
    "build": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor nx nx:compile",
    "build:tsc": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor tsc",
    "clean": "$npm_package_config_packageexecutor nx nx:clean --verbose",
    "clean:module": "rm -rf $npm_package_config_outpaths || true",
    "dx:lint": "$npm_package_config_packageexecutor nx build && $npm_package_config_packageexecutor nx lint:format && $npm_package_config_packageexecutor nx package:format",
    "dx:precommit": "$npm_package_config_packageexecutor nx dx:precommit:pre && $npm_package_config_packageexecutor nx package:deps",
    "dx:precommit:pre": "echo \"Starting precommit dx. This will check package.json dependencies.\"",
    "dx:prepublish": "$npm_package_config_packageexecutor nx dx:prepublish:pre && $npm_package_config_packageexecutor nx dx:lint && $npm_package_config_packageexecutor nx prepublish",
    "dx:prepublish:pre": "echo \"Starting prepublish dx. This will compile the package, lint it, format package.json and verify all exports are valid. \"",
    "dx:test": "$npm_package_config_packagebin run clean && $npm_package_config_packagebin run build && $npm_package_config_packagebin run test",
    "generate:i18n": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor spork code gen --root \"../../i18n\" --command \"$(which $npm_package_config_packagemanager) --silent run build\" --artifact module --destination $npm_package_config_i18n --clean",
    "generate:models": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor spork code gen --root \"../../models\" --command \"$(which $npm_package_config_packagemanager) --silent run build\" --artifact module --destination $npm_package_config_models --clean",
    "generate:protocols": "NODE_NO_WARNINGS=1 NPM_CONFIG_UPDATE_NOTIFIER=false $npm_package_config_packageexecutor spork code gen --root \"../../protocols\" --command \"$(which $npm_package_config_packagemanager) --silent run build\" --artifact gen --destination $npm_package_config_protocols --clean",
    "lambda:http": "$npm_package_config_packageexecutor aws-lambda-ric $npm_package_config_handlerhttplambda",
    "lint": "$npm_package_config_packageexecutor biome check $npm_package_config_srcpaths",
    "lint:format": "$npm_package_config_packageexecutor biome format --write $npm_package_config_srcpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor biome check --write --unsafe $npm_package_config_srcpaths",
    "lint:write": "$npm_package_config_packageexecutor biome check --write $npm_package_config_srcpaths",
    "package:deps": "$npm_package_config_packageexecutor depcheck",
    "package:fix": "$npm_package_config_packageexecutor syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor syncpack format",
    "package:update": "$npm_package_config_packageexecutor syncpack update",
    "precommit": "$npm_package_config_packageexecutor nx dx:prepublish --no-cloud --verbose",
    "predx:lint": "$npm_package_config_packageexecutor nx clean",
    "prelint": "$npm_package_config_packageexecutor nx exec -- biome format $npm_package_config_lintpaths",
    "prepublish": "$npm_package_config_packageexecutor nx exec -- publint --strict",
    "start": "$npm_package_config_packageexecutor spork server start $npm_package_config_moduleserver",
    "test": "$npm_package_config_packageexecutor nx nx:test --verbose",
    "test:module": "echo 'node --test  \"module/**/*.test.js\"'"
  },
  "type": "module",
  "types": "module/app/index.d.mts"
}
