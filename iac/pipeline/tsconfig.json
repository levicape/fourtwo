{
	"include": ["./**/*"],
	"compilerOptions": {
		/* Language and Environment */
		"target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
		"jsx": "react-jsx",
		"jsxImportSource": "@levicape/fourtwo" /* Specify what JSX code is generated. */,
		/* Modules */
		"module": "NodeNext",
		"moduleResolution": "nodenext" /* Specify how TypeScript looks up a file from a given module specifier. */,
		"rootDir": "." /* Specify what module code is generated. */,
		// "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
		// "typeRoots": [],                                  /* Specify multiple folders that act like './node_modules/@types'. */
		// "allowUmdGlobalAccess": true,                     /* Allow accessing UMD globals from modules. */
		// "moduleSuffixes": [],                             /* List of file name suffixes to search when resolving a module. */
		// "resolveJsonModule": true,                        /* Enable importing .json files. */
		// "noResolve": true,                                /* Disallow 'import's, 'require's or '<reference>'s from expanding the number of files TypeScript should add to a project. */

		/* Emit */
		"declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
		"declarationMap": true /* Create sourcemaps for d.ts files. */,
		"noEmit": true,
		"inlineSourceMap": true /* Include sourcemap files inside the emitted JavaScript. */,
		"inlineSources": true /* Include source code in the sourcemaps inside the emitted JavaScript. */,
		/* Interop Constraints */
		"allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

		/* Type Checking */
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
		"strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
		"strictPropertyInitialization": false /* Check for class properties that are declared but not set in the constructor. */,
		"noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
		"alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
		"noUnusedLocals": false /* Enable error reporting when local variables aren't read. */,
		"noUnusedParameters": false /* Raise an error when a function parameter isn't read. */,
		"noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
		"noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
		"skipLibCheck": true /* Skip type checking all .d.ts files. */,
		"verbatimModuleSyntax": true,
		"isolatedModules": true
	}
}
