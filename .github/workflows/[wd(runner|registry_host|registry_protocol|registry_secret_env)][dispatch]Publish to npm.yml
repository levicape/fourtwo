########################################
# THIS FILE WAS AUTOMATICALLY GENERATED, DO NOT MODIFY
########################################
name: "dispatch: RUNNER:publish:npm"
on:
  workflow_dispatch:
    inputs:
      runner:
        required: true
        type: string
        description: The runner to use for the job
      registry_host:
        required: true
        type: string
        description: The target registry host to publish to
      registry_protocol:
        required: true
        type: string
      registry_secret_env:
        required: false
        description: Name of env var for the target registry secret
        type: string
env:
  NPM_REGISTRY_PROTOCOL: https
  NPM_REGISTRY_HOST: npm.pkg.github.com
  PACKAGE_JSON_NAME: "@levicape/fourtwo"
jobs:
  select:
    name: Select registry from event inputs
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: read
    outputs:
      runner: ${{ github.event.inputs.runner }}
      registry_host: ${{ github.event.inputs.registry_host }}
      registry_protocol: ${{ github.event.inputs.registry_protocol }}
      registry_secret: ${{ env[github.event.inputs.registry_secret_env] }}
      package_name: ${{ env.PACKAGE_JSON_NAME }}
    steps:
      - name: Select registry from event inputs
        run: |-
          export REGISTRY_SECRET="$${{ github.event.inputs.registry_secret_env }}";
          echo "::set-output name=runner::${{ github.event.inputs.runner }}";
          echo "::set-output name=registry_host::${{ github.event.inputs.registry_host }}";
          echo "::set-output name=registry_protocol::${{ github.event.inputs.registry_protocol }}";
          echo "::set-output name=registry_secret::$REGISTRY_SECRET";
          echo "::set-output name=package_name::${{ env.PACKAGE_JSON_NAME }}";
          echo "registry_host: ${{ github.event.inputs.registry_host }}";
          echo "registry_protocol: ${{ github.event.inputs.registry_protocol }}";
          echo "registry_secret: ${{ github.event.inputs.registry_secret_env }}";
          echo "package_name: ${{ env.PACKAGE_JSON_NAME }}";
  packages:
    name: Publish to registry
    runs-on: ${{ needs.select.outputs.runner }}
    needs:
      - select
    permissions:
      packages: read
      contents: read
    steps:
      - name: Verify registry URL
        continue-on-error: true
        run: |-
          echo "NPM_REGISTRY_URL: ${{ env.NPM_REGISTRY_PROTOCOL }}://${{ env.NPM_REGISTRY_HOST }}";
          curl -v --insecure ${{ env.NPM_REGISTRY_PROTOCOL }}://${{ env.NPM_REGISTRY_HOST }};
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node 22.12.0
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0
          registry-url: ${{ env.NPM_REGISTRY_PROTOCOL }}://${{ env.NPM_REGISTRY_HOST }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
          scope: "@levicape"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: cache-npm
        name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-npm-node-modules-${{ hashFiles('**/pnpm-lock.json') }}
          restore-keys: ${{ runner.os }}-build-npm-node-modules-
      - name: Get pnpm store directory
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV;
      - id: cache-pnpm-store
        name: Cache pnpm files
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.json') }}
          restore-keys: ${{ runner.os }}-pnpm-store-
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List Dependencies
        continue-on-error: true
        run: pnpm list;
      - name: Install Dependencies
        run: pnpm install;
      - name: Set version to latest in registry
        continue-on-error: true
        env:
          NODE_NO_WARNINGS: "1"
        run: pnpm version $(npm view ${{ needs.select.outputs.package_name }} version)--no-git-tag-version --no-git-checks;
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
      - name: Setup Node 22.12.0
        uses: actions/setup-node@v4
        with:
          node-version: 22.12.0
          registry-url: ${{ needs.select.outputs.registry_protocol }}://${{ needs.select.outputs.registry_host }}
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml
          scope: "@levicape"
        env:
          NODE_AUTH_TOKEN: ${{ secrets[needs.select.outputs.registry_secret] }}
      - name: "Run package.json: prepublish"
        run: pnpm run prepublish;

########################################
########################################
#**:_$~- {"$$":"head","filename":"[wd(runner|registry_host|registry_protocol|registry_secret_env)][dispatch]Publish to npm.yml","source":"iac/workflows/github/workflow_dispatch/Publish to npm.js"}
#**:_$~- {"$$":"script","generator":"codegen/github/GenerateGithubWorkflow.mts"}
#**:_$~- {"$$":"body","hashed":"9d392729e999b3ca2ed672a5a8a85af1b14082ce456c2fdb0b40378587d65093"}
#**:_$~- {"$$":"footer","started":"2024-12-25T08:12:32.200Z","now":"2024-12-25T08:12:32.206Z","elapsed":"6ms"}
# END OF GENERATED FILE

