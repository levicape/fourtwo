{
  "name": "@levicape/fourtwo",
  "version": "0.0.0-local.0",
  "author": "Pedro Cardona",
  "bin": {
    "@levicape/fourtwo": "module/cli/bin.mjs",
    "fourtwo": "module/cli/bin.mjs"
  },
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "binpath": "./src/cli/bin.mts",
    "outpaths": "./module",
    "clipath": "./module/cli/bin.mjs",
    "lintpaths": "./src ./canary ./iac"
  },
  "dependencies": {
    "@aws/codecatalyst-workflows-sdk": "catalog:aws",
    "@stricli/core": "catalog:cli",
    "aws4fetch": "catalog:aws",
    "better-sqlite3": "catalog:database-sqlite",
    "enquirer": "catalog:cli",
    "fast-xml-parser": "catalog:core",
    "ini": "catalog:core",
    "js-yaml": "catalog:core",
    "knex": "catalog:database-sql",
    "pretty-ms": "catalog:core",
    "verror": "catalog:core",
    "yaml": "catalog:core",
    "zod": "catalog:core"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@types/ini": "catalog:types",
    "@types/js-yaml": "catalog:types",
    "@types/node": "catalog:types",
    "@types/verror": "catalog:types",
    "depcheck": "catalog:package",
    "esbuild": "catalog:build",
    "expect": "catalog:test",
    "jsonc-parser": "catalog:core",
    "nx": "catalog:package",
    "publint": "catalog:package",
    "syncpack": "catalog:package",
    "tsx": "catalog:dev",
    "typescript": "catalog:dev"
  },
  "engines": {
    "node": "22"
  },
  "exports": {
    ".": {
      "types": {
        "import": "./module/index.d.mts",
        "require": "./module/index.d.cts"
      },
      "node": "./module/index.mjs",
      "import": "./module/index.mjs",
      "require": "./module/_exports.js",
      "default": "./module/index.mjs"
    },
    "./jsx-runtime": "./module/jsx/jsx-runtime.js",
    "./jsx-runtime.js": "./module/jsx/jsx-runtime.js",
    "./ci": "./module/ci/index.mjs",
    "./ci/cd": "./module/ci/cd/index.mjs",
    "./ci/cd/pipeline": "./module/ci/cd/pipeline/index.mjs",
    "./ci/cd/pipeline/codebuild": "./module/ci/cd/pipeline/codebuild/index.mjs",
    "./ci/cd/pipeline/codedeploy": "./module/ci/cd/pipeline/codedeploy/index.mjs",
    "./ci/cd/pipeline/codecatalyst": "./module/ci/cd/pipeline/codecatalyst/index.mjs",
    "./ci/cd/pipeline/codepipeline": "./module/ci/cd/pipeline/codepipeline/index.mjs",
    "./ci/cd/pipeline/devfile": "./module/ci/cd/pipeline/devfile/index.mjs",
    "./ci/cd/pipeline/github": "./module/ci/cd/pipeline/github/index.mjs",
    "./ci/cd/state": "./module/ci/cd/state/index.mjs",
    "./ci/codegen": "./module/ci/codegen/index.mjs",
    "./ci/codegen/github": "./module/ci/codegen/github/index.mjs",
    "./cli": "./module/cli/index.mjs",
    "./sdk": "./module/sdk/index.mjs",
    "./sdk/aws": "./module/sdk/aws/index.mjs",
    "./x": "./module/ci/cd/pipeline/index-x.mjs",
    "./x/devfile": "./module/ci/cd/pipeline/devfile/index-x.mjs",
    "./x/codecatalyst": "./module/ci/cd/pipeline/codecatalyst/index-x.mjs",
    "./x/codecatalyst/actions": "./module/ci/cd/pipeline/codecatalyst/actions/index-x.mjs",
    "./x/codecatalyst/actions/aws": "./module/ci/cd/pipeline/codecatalyst/actions/aws/index-x.mjs",
    "./x/codepipeline": "./module/ci/cd/pipeline/codepipeline/index-x.mjs",
    "./x/github": "./module/ci/cd/pipeline/github/index-x.mjs",
    "./x/github/node": "./module/ci/cd/pipeline/github/steps/node/index-x.mjs"
  },
  "files": [
    "iac",
    "module"
  ],
  "license": "AGPL-3.0-only",
  "nx": {
    "targets": {
      "dx:precommit": {
        "dependsOn": [
          "dx:prepublish",
          "nx:test"
        ]
      },
      "dx:prepublish": {
        "dependsOn": [
          "@levicape/fourtwo-builders:dx:precommit",
          "@levicape/fourtwo-pulumi:dx:precommit",
          "@levicape/fourtwo-panel-ui:dx:precommit",
          "@levicape/fourtwo-panel-io:dx:precommit",
          "@levicape/fourtwo-iac-stacks:dx:precommit"
        ]
      },
      "dx:test": {
        "dependsOn": [
          "dx:lint",
          "nx:test"
        ]
      },
      "nx:clean": {
        "dependsOn": [
          "clean:module"
        ]
      },
      "nx:compile": {
        "dependsOn": [
          "build:tsc",
          "@levicape/fourtwo-canary:nx:compile",
          "@levicape/fourtwo-pulumi:nx:compile",
          "@levicape/fourtwo-panel-ui:nx:compile",
          "@levicape/fourtwo-panel-io:nx:compile",
          "@levicape/fourtwo-builders:nx:compile"
        ]
      },
      "nx:test": {
        "dependsOn": [
          "@levicape/fourtwo-canary:nx:test",
          "test:module"
        ]
      },
      "nx:sync": {
        "dependsOn": [
          "iac-workflows:nx:sync"
        ]
      }
    }
  },
  "packageManager": "pnpm@9.15.4+sha512.b2dc20e2fc72b3e18848459b37359a32064663e5627a51e4c74b2c29dd8e8e0491483c3abb40789cfd578bf362fb6ba8261b05f0387d76792ed6e23ea3b1b6a0",
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/fourtwo",
  "scripts": {
    "build": "$npm_package_config_packageexecutor nx nx:compile",
    "build:tsc": "$npm_package_config_packageexecutor tsc",
    "clean": "$npm_package_config_packageexecutor nx nx:clean",
    "clean:module": "rm -rf $npm_package_config_outpaths || true",
    "clean:packages": "rm -rf **/node_modules && $npm_package_config_packageexecutor nx reset",
    "dx:cli:bin": "NODE_NO_WARNINGS=1 $npm_package_config_packageexecutor tsx $npm_package_config_binpath",
    "dx:cli:dev": "node --inspect-brk --import tsx $npm_package_config_binpath",
    "dx:cli:mjs": "NODE_NO_WARNINGS=1 node $npm_package_config_clipath",
    "dx:commit": "$npm_package_config_packagemanager run clean:packages && $npm_package_config_packageexecutor nx dx:precommit --no-cloud --verbose",
    "dx:lint": "$npm_package_config_packageexecutor nx nx:compile && $npm_package_config_packageexecutor nx lint:format && $npm_package_config_packageexecutor nx package:format",
    "dx:precommit": "$npm_package_config_packageexecutor nx dx:precommit:pre && $npm_package_config_packageexecutor nx dx:sync && $npm_package_config_packageexecutor nx package:deps",
    "dx:precommit:pre": "echo \"Starting precommit dx. This will recompile iac files and check package.json dependencies.\"",
    "dx:prepublish": "$npm_package_config_packageexecutor nx dx:prepublish:pre && $npm_package_config_packageexecutor nx dx:lint && $npm_package_config_packageexecutor nx prepublish",
    "dx:prepublish:pre": "echo \"Starting prepublish dx. This will compile the package, lint it, format package.json and verify all exports are valid. \"",
    "dx:sync": "$npm_package_config_packageexecutor nx dx:sync:pre && $npm_package_config_packageexecutor nx nx:sync --verbose",
    "dx:sync:pre": "echo \"Starting sync dx. This will generate all the workflows and sync them with the repository.\"",
    "heroku-prebuild": "$npm_package_config_packagemanager rebuild || true",
    "lint": "$npm_package_config_packageexecutor nx exec -- biome check $npm_package_config_lintpaths",
    "lint:format": "$npm_package_config_packageexecutor nx exec -- biome check --write $npm_package_config_lintpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor nx exec -- biome check --write --unsafe $npm_package_config_lintpaths",
    "package:deps": "$npm_package_config_packageexecutor nx exec -- depcheck",
    "package:fix": "$npm_package_config_packageexecutor nx exec -- syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor nx exec -- syncpack format",
    "package:update": "$npm_package_config_packageexecutor nx exec -- syncpack update",
    "postclean:packages": "$npm_package_config_packagemanager install --ignore-scripts",
    "precommit": "$npm_package_config_packageexecutor nx dx:prepublish --no-cloud --verbose",
    "predx:lint": "$npm_package_config_packageexecutor nx clean",
    "prelint": "$npm_package_config_packageexecutor nx exec -- biome format $npm_package_config_lintpaths",
    "prepublish": "$npm_package_config_packageexecutor publint --strict",
    "test": "$npm_package_config_packageexecutor nx nx:test",
    "test:module": "echo 'node --test --test-reporter junit \"module/**/*.test.js\"'",
    "xx:workflow": "$npm_package_config_packageexecutor nx run-many -t build,lint,test --parallel=1 --verbose --no-cloud"
  },
  "type": "module",
  "types": "./module/index.d.mts"
}
