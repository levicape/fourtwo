{
  "name": "@levicape/fourtwo",
  "version": "0.0.0-local.0",
  "author": "Pedro Cardona",
  "bin": {
    "@levicape/fourtwo": "module/cli/bin.mjs",
    "fourtwo": "module/cli/bin.mjs"
  },
  "config": {
    "packagemanager": "pnpm",
    "packageexecutor": "pnpm exec",
    "binpath": "./src/cli/bin.mts",
    "clipath": "./module/cli/bin.mjs",
    "lintpaths": "./src ./canary ./iac"
  },
  "dependencies": {
    "@bufbuild/protobuf": "catalog:protobuf",
    "@kubernetes-models/postgres-operator": "catalog:kubernetes",
    "@pulumi/aws": "catalog:pulumi",
    "@pulumi/awsx": "catalog:pulumi",
    "@pulumi/command": "catalog:pulumi",
    "@pulumi/docker": "catalog:pulumi",
    "@pulumi/docker-build": "catalog:pulumi",
    "@pulumi/kubernetes": "catalog:pulumi",
    "@pulumi/pulumi": "catalog:pulumi",
    "@pulumi/random": "catalog:pulumi",
    "@pulumi/synced-folder": "catalog:pulumi",
    "@pulumiverse/time": "catalog:pulumi",
    "@stricli/core": "catalog:cli",
    "@types/module-alias": "catalog:types",
    "aws4fetch": "catalog:aws",
    "enquirer": "catalog:cli",
    "fast-xml-parser": "catalog:core",
    "folder-hash": "catalog:build",
    "ini": "catalog:core",
    "ksuid": "catalog:id",
    "nanoid": "catalog:id",
    "nexe": "catalog:build",
    "pretty-ms": "catalog:core",
    "slugid": "catalog:id",
    "tsx": "catalog:dev",
    "unzipper": "catalog:server",
    "verror": "catalog:core",
    "yaml": "catalog:core",
    "zod": "catalog:core"
  },
  "devDependencies": {
    "@biomejs/biome": "catalog:lint",
    "@bufbuild/buf": "catalog:protobuf",
    "@types/compressible": "catalog:types",
    "@types/folder-hash": "catalog:types",
    "@types/ini": "catalog:types",
    "@types/jsonwebtoken": "catalog:types",
    "@types/node": "catalog:types",
    "@types/unzipper": "catalog:types",
    "@types/verror": "catalog:types",
    "ci": "catalog:package",
    "depcheck": "catalog:package",
    "expect": "catalog:test",
    "publint": "catalog:package",
    "syncpack": "catalog:package",
    "ts-proto": "catalog:protobuf",
    "typescript": "catalog:dev"
  },
  "engines": {
    "node": ">=22.0.0"
  },
  "exports": {
    ".": "./module/index.mjs",
    "./jsx-runtime": "./module/runtime/jsx-runtime.js",
    "./pulumi": "./module/pulumi/index.mjs",
    "./pulumi/component": "./module/pulumi/component/index.mjs",
    "./pulumi/component/aws": "./module/pulumi/component/aws/index.mjs",
    "./pulumi/component/cdn": "./module/pulumi/component/cdn/index.js",
    "./pulumi/component/compute": "./module/pulumi/component/compute/index.js",
    "./pulumi/component/database": "./module/pulumi/component/database/index.js",
    "./pulumi/component/queue": "./module/pulumi/component/queue/index.js",
    "./pulumi/component/website": "./module/pulumi/component/website/index.js",
    "./pulumi/domains": "./module/pulumi/domains/index.js",
    "./pulumi/domains/aws": "./module/pulumi/domains/aws/index.js",
    "./pulumi/domains/frontend": "./module/pulumi/domains/frontend/index.js",
    "./ci": "./module/ci/index.mjs",
    "./ci/codegen": "./module/ci/codegen/index.mjs",
    "./ci/codegen/github": "./module/ci/codegen/github/index.mjs",
    "./ci/cd": "./module/ci/cd/index.mjs",
    "./ci/cd/pipeline": "./module/ci/cd/pipeline/index.mjs",
    "./ci/cd/pipeline/github": "./module/ci/cd/pipeline/github/index.mjs",
    "./ci/cd/state": "./module/ci/cd/state/index.mjs",
    "./cli": "./module/cli/index.mjs",
    "./sdk": "./module/sdk/index.mjs",
    "./sdk/aws": "./module/sdk/aws/index.mjs"
  },
  "files": [
    "canary",
    "iac",
    "module"
  ],
  "license": "AGPL-3.0-only",
  "packageManager": "pnpm@9.7.0+sha512.dc09430156b427f5ecfc79888899e1c39d2d690f004be70e05230b72cb173d96839587545d09429b55ac3c429c801b4dc3c0e002f653830a420fa2dd4e3cf9cf",
  "peerDependencies": {
    "typescript": "catalog:dev"
  },
  "publishConfig": {
    "registry": "https://npm.pkg.github.com/"
  },
  "repository": "github:levicape/fourtwo",
  "scripts": {
    "build": "$npm_package_config_packageexecutor tsc",
    "clean": "rm -rf ./module",
    "clean:install": "rm -rf ./node_modules",
    "compile": "$npm_package_config_packagemanager run build",
    "dx:cli:bin": "$npm_package_config_packageexecutor tsx $npm_package_config_binpath",
    "dx:cli:dev": "node --inspect-brk --import tsx $npm_package_config_binpath",
    "dx:lint": "$npm_package_config_packagemanager run compile && $npm_package_config_packagemanager run lint:format && $npm_package_config_packagemanager run package:format",
    "dx:prepublish": "$npm_package_config_packagemanager run dx:prepublish:pre && $npm_package_config_packagemanager run dx:lint && $npm_package_config_packagemanager run dx:sync && $npm_package_config_packagemanager run prepublish",
    "dx:prepublish:pre": "echo \"Starting prepublish dx. This will compile the package, lint it, format package.json and verify all exports are valid. \"",
    "dx:sync": "echo 'Not supported yet'",
    "ft:gha:push:main": "$npm_package_config_packagemanager run dx:cli:bin github workflows gen \"./iac/workflows/github/push/GithubMainPushPipeline.js\" --output",
    "ft:gha:release:released": "$npm_package_config_packagemanager run dx:cli:bin github workflows gen \"./iac/workflows/github/release/GithubReleaseReleasedPipeline.js\" --output",
    "lint": "$npm_package_config_packageexecutor biome check $npm_package_config_lintpaths",
    "lint:format": "$npm_package_config_packageexecutor biome check --write $npm_package_config_lintpaths",
    "lint:unsafe": "$npm_package_config_packageexecutor biome check --write --unsafe $npm_package_config_lintpaths",
    "package:deps": "$npm_package_config_packageexecutor depcheck",
    "package:fix": "$npm_package_config_packageexecutor syncpack fix-mismatches",
    "package:format": "$npm_package_config_packageexecutor syncpack format",
    "package:update": "$npm_package_config_packageexecutor syncpack update",
    "prebuild": "$npm_package_config_packagemanager run clean",
    "prelint": "$npm_package_config_packageexecutor biome format $npm_package_config_lintpaths",
    "prepublish": "$npm_package_config_packageexecutor publint --strict",
    "test": "$npm_package_config_packagemanager run test:module && $npm_package_config_packagemanager run test:canary",
    "test:canary": "node --experimental-strip-types canary/src/basic/server.canary.mts",
    "test:module": "echo 'node --test  \"module/**/*.test.js\"'",
    "up:integration": "echo 'node --test  \"module/**/*.test.js\"'"
  },
  "type": "module",
  "types": "module/index.d.mts"
}
